name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  

      - name: Run Linter
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  merge:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge dev into main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch origin
          git checkout main
          git merge origin/dev -X theirs -m "Automated merge from dev to main" --allow-unrelated-histories
          git push origin main

  deploy:
    runs-on: ubuntu-latest
    needs: merge
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Migrations
        env:
          FLASK_APP: app.py 
          DATABASE_URL: ${{ secrets.POSTGRES_URL }} 
        run: |
          flask db migrate -m "Auto migration from GitHub Actions" || echo "No migration necessary"
          flask db upgrade

      - name: Seed Database
        env:
          DATABASE_URL: ${{ secrets.POSTGRES_URL }}
        run: |
          python seed.py || echo "Seeding not necessary or failed"

      - name: Debug Environment Variables
        env:
          DATABASE_URL: ${{ secrets.POSTGRES_URL }}
        run: |
          echo "DATABASE_URL is set to: $DATABASE_URL"

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST "https://api.render.com/v1/services/srv-csossa1u0jms738pdbfg/deploys" \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -d '{"branch": "main"}'
